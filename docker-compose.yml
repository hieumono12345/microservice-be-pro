services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SASL_ENABLED: "true"
      ZOOKEEPER_SERVER_SASL_ENABLED: "true"
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/zookeeper/zookeeper_jaas.conf"
    ports:
      - "2181:2181"
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD", "bash", "-c", "echo 'ruok' | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./zookeeper_jaas.conf:/etc/zookeeper/zookeeper_jaas.conf
      - ./zookeeper.properties:/etc/zookeeper/zookeeper.properties

  kafka:
    image: confluentinc/cp-kafka:7.7.0
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://kafka:9092,SASL_PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_PLAINTEXT_HOST:SASL_PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: SASL_PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_PLAIN_USERNAME: admin
      KAFKA_SASL_PLAIN_PASSWORD: admin-secret
      KAFKA_ZOOKEEPER_SASL_ENABLED: "true"
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
    ports:
      - "29092:29092"
    networks:
      - microservice-network
    volumes:
      - ./kafka_jaas.conf:/etc/kafka/kafka_server_jaas.conf
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 3

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: auth_db
      MYSQL_USER: auth_user
      MYSQL_PASSWORD: auth_password

      # Thêm DB và User cho products + orders
      MYSQL_DATABASE_2: offline_db
      MYSQL_USER_2: offline_user
      MYSQL_PASSWORD_2: offline_password
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./certs/mysql:/etc/mysql/certs
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: >
      --ssl-ca=/etc/mysql/certs/ca.crt
      --ssl-cert=/etc/mysql/certs/server.crt
      --ssl-key=/etc/mysql/certs/server.key
      --require-secure-transport=ON
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  microservice-network:
    driver: bridge

volumes:
  mysql-data: